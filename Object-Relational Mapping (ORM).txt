[Music]
welcome to object relational mapping or
omm in this video we will explain how om
can simplify application development
with datab basis after watching this
video you will be able to describe the
difference between the SQL Paradigm and
the objectoriented programming or o
Paradigm explain the Core Concepts of om
and list the pros and cons of om
software developers often use a database
as the main data repository for their
application so they need to integrate
SQL into their application code SQL
statements must be assembled in
application code and executed in the
database system using database apis the
retriev database rows are returned to an
application code AS cursor a special
control data structure for iterating
over rows in a database this online
course database contains only two
entries course and learner the
relationship between them is many to
many one course can have many Learners
enrolled and one learner can enroll in
many courses this relationship is
persisted in an associative table let us
see an example of executing SQL in
Python code first we create a connection
to an embedded SQL light database this
is the empty online course database next
we create a cursor object from the
connection context then we can send and
execute SQL we start with an insert
statement to create and insert a learner
record once the insert statement is
assembled we call cursor to execute
methods to run the SQL lastly we create
another select statement to query the
learner record we just inserted and we
use the cursor fetch one to retrieve the
first row the output shows the learner
row we just inserted in the modern
application development environment o is
the main stream and it is quite
different from SQL unlike SQL Which
models entities using tables rows and
columns an objectoriented language
models entities using classes and
objects in oop course entity would be
defined as a class with two primitive
attributes name and description and one
reference attribute the list of Learners
methods for data manipulation also need
to be defined along with class
attributes here we Define a simple
method get Learners learner entity would
also be defined as a class with four
attributes first name last name date of
birth and occupation a simple print
profile method would also be defined let
us create a learner object from a
database using both SQL and oop
paradigms first we execute a SQL select
statement and get the first learn row to
load the data into the learn object we
create an object by calling its default
Constructor then we update the object
with attribute values queried from
cursor we need to manually map each
column to each class primitive attribute
this can become complicated if we have
complex data relationships finally we
call the print profile method to print
the object we have seen that the oop and
SQL paradigms model data differently oop
models entities using classes objects
and attributes whereas SQL models
entities using tables rows and columns
also oop models relationships using
class patterns like inheritance
Association and aggregation whereas SQL
models relationships using join and
foreign key lastly oop performs crud on
data using methods whereas SQL performs
crud on data using data manipulation
language like the SQL statements insert
delete and update since we generally
build modern applications using o o op
can we also access databases using oop
instead of SQL that way we can stick to
one programming Paradigm for our
development the main reason people
invented object relational mapping was
to bridge the gap between oop and SQL
and make it possible to use oop
languages to access databases om
libraries or tools can map and transfer
data stored in a relational database as
rows into objects or objects into rows
suppose we have a learner object model
created by a developer using oop omm can
help transfer the learner object into a
learner row in a learner table and read
it back into a learner object this
reduces developers workload because they
only need to focus on object
operations here's how om can transfer a
three table join SQL query as a single
line of code suppose we want to get all
Learners who are enrolled in the
introduction to python course in SQL we
would have to join course learner and
their lookup tables to get all the
information we would also need to mix
both the oop and SQL paradigms but with
the help of omm we just need to First
Call the get method in course class to
find the course by name and then
retrieve all its Learners done now that
you've learned how convenient om is you
may want to use it in your application
there are o M libraries for almost all
popular languages for python you can use
D Jango model and SQL Alchemy for Java
you can use hibernate and open jpa and
for JavaScript you can use sqe and type
omm these are just a few examples in
this course we'll focus on D Jango model
like all thirdparty software libraries
om has its pros and cons on the positive
side with omm your class designs Define
the databases for oop application
development you just need to Define
classes and create objects you can use
databases without writing SQL also you
can use a single omm interface to manage
multiple database systems without
worrying about differences in SQL syntax
all these benefits will speed up your
application delivery on the negative
side SQL and oop are still two different
languages with different modeling
Concepts and or may fail to perform the
mapping of objects into database tables
also since or combines data access logic
with application code any database
change will require changes to both the
application logic and the data access
logic because om hides the
implementation details debugging can be
challenging finally om May reduce
application performance om adds an extra
translation layer but it cannot
guarantee that the translated SQL
statements are optimized in this video
you learned that SQL and O model data
differently om Bridges the gap between
SQL and oop or allows application
developers to use databases without
writing SQL code or can speed up
application development and the
disadvantages of or include imperfect
mapping increased code coupling and
difficulty in debugging